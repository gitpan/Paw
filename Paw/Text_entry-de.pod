=head1 Textentry Widget

B<$te=Paw::Text_entry::new($width, [$color], [$name], [\&callback], [$text], [$side], [$echo], [$max_length]);>

B<Parameter>

     width      => Breite des Text Entrys

     color      => Das Farbpaar (colorpair) muss mit
                   Curses::init_pair(pair_nr, COLOR_fg, COLOR_bg)
                   erzeugt werden[optional]

     name       => Name des Widgets [optional]

     callback   => Referenz auf Funktion die bei jedem Tastendruck
                   angesprungen wird. [optional]

     text       => Ein Text der im Entry stehen soll. [optional]

     orientation=> "left"(default) oder "right" fuer links- bzw.
                   rechtsbuendigen Text

     echo       => 0, 1  oder 2 : 0=keine Wiedergabe des eingegebenen Textes,
                   1=´*´ statt Buchstaben, 2=volle Widergabe (default)
                   (0 und 1 fuer z.B. Passwoerter) [optional]

     max_length => Maximale Laenge einer Eingabe (default = 1024)

B<Beispiel>

     $te=Paw::Text_entry::new(width=>15, text=>"PLEASE ENTER NAME",
                              max_length=>25); 

B<Callback>

Die Callback Funktion wird bei jedem Tastendruck angesprungen, dabei wird die 
Objekt-Referenz ($this) sowie der Wert der gedrueckten Taste uebergeben. 
Dieser muss auch wieder zurueck gegeben werden, wenn er in das Textentry soll. 
So laesst sich eine Art Filter programmieren, der z.B. nur Ziffern zulaesst.

sub callback {
   my $this = shift;
   my $key  = shift;

   [... Programmcode ...]

   return $key;
}


=head2 get_text()

gibt den Text des Entry's zurueck

B<Beispiel>

     $text=$te->get_text();

=head2 set_text($text)

setzt den Text im Entry.

B<Beispiel>

     $te->set_text("default");

=head2 abs_move_widget($new_x, $new_y)

Das Widget verschiebt sich auf die neue absolute Schirm Position.
Wird nur einer der Parameter angegeben, so behaelt der andere seinen Wert bei.

B<Beispiel>

     $te->abs_move_widget( new_x=>5 );      #y-pos is the same

=head2 get_widget_pos()

Gibt ein Array mit den beiden Wertde (x-Position, y-Position) zurueck. 

B<Beispiel>

     ($xpos,$ypos)=$te->get_widget_pos();

=head2 set_color($color_pair)

Setzt ein neues color_pair.

B<Beispiel>

     $box->set_color(3);

=head2 set_border([``shade''])

aktiviert den Rahmen der Box. Optional auch mit Schatten. 

B<Beispiel>

     $box->set_border("shade"); or $win->set_border();


=cut

